@model EmpProj.Models.Emp

@{
    ViewBag.Title = "Create";
}
<h2>Welcome!</h2>
<h3>Create a new employee</h3>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    @*<h4>Emp</h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.EmpID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmpID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmpID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Dept, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control" id="Dept" name="Dept">
                <option value="">- Please select a Dept-</option>
                <option value="Team Leader">Team Leader</option>
                <option value="HR">HR</option>
                <option value="Developer">Developer</option>
                <option value="Tester">Tester</option>
            </select>
            @*@Html.EditorFor(model => model.Dept, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Dept, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="radio" value="Male" id="Sex" name="Sex" />Male<br />
            <input type="radio" value="Female" id="Sex" name="Sex" />Female<br />
            @*@Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
        </div>
    </div>
  
    <div class="form-group">
        @Html.LabelFor(model => model.Marital_status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="radio" value="Unmarried" id="Marital_status" name="Marital_status" />Unmarried<br />
            <input type="radio" value="Married" id="Marital_status" name="Marital_status" />Married<br />
            @*@Html.EditorFor(model => model.Marital_status, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Marital_status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNum, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PhoneNum, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNum, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @*<div class="col-md-offset-2 col-md-10">*@
        <input type="submit" value="Submit" class="btn btn-default" />
        @*</div>*@
        &nbsp;&nbsp;&nbsp;
        <span>
            <input type="button" value="View" class="btn-default" onclick='redirectOnClick()' />
            <script>
                function redirectOnClick() {
                    document.location = 'Emps/Index';
                }
            </script>
        </span>
        &nbsp;&nbsp;&nbsp;
        <button type="reset" onclick="this.form.reset();return false">Reset</button>
    </div>
</div>
}
<div> @Html.ActionLink("Back to List", "Index")
      
</div>
